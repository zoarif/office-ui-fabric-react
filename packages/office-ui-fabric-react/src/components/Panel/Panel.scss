@import '../../common/common';

// This implementation is RTL friendly, and divides the classes so that the panel types
// and left/right animations are in different classes. It also separates out the design
// rules/restrictions for Panel usage so that it becomes a generic Panel. It is up to the
// user to use the Panels properly (smLeft panels are for left navs, smFixed panels are for
// drop down menus on mobile, knowing when it's appropriate to have a command bar or not)
//
// Here is the OneNote design document for this implementation of the Panel:
//
// https://msft.spoppe.com/collab/OSS%20Design/pcp/_layouts/15/WopiFrame.aspx?sourcedoc={9a356b27-4138-491d-b2f6-6b3e442fc6a5}&action=edit&wd=target%28%2F%2FDesign%2FToolkit.one%7C61ef427b-c38f-4ee3-a215-67758011eb67%2FSurface%20Behavior%7C376ed8fd-33f0-4661-85aa-feec8a963fa0%2F%29
//

//
// Office UI Fabric
// --------------------------------------------------
// Panel styles

$Panel-width-xs: 272px;
$Panel-width-sm: 340px;
$Panel-width-md: 643px;
$Panel-width-lg: 940px;
$Panel-margin-md: 48px;
$Panel-margin-lg: 428px;
$Panel-margin-xl: 176px;
$CommandBarHeight: 44px;

.hiddenPanel {
  visibility: hidden;
}

.root {
  pointer-events: none;

  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;


  // Overlay used within panel
  .overlay {
    pointer-events: none;
    opacity: 1;
    cursor: pointer;
    transition: opacity $ms-animation-duration-3 $ms-animation-ease-1;
  }
}

// The panel itself, where the content goes.
.main {
  background-color: $ms-color-white;

  position: absolute;
  @include ms-right(0);
  width: 100%;
  bottom: 0;
  top: 0;

  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;

  // Medium screens and up - (anchored right, fixed width)
  @media (min-width: $ms-screen-min-md) {
    border-left: 1px solid $ms-color-neutralLight;
    border-right: 1px solid $ms-color-neutralLight;
    pointer-events: auto;
    width: $Panel-width-sm;
    @include ms-drop-shadow(-30px, 0px, 30px, -30px, .2);
    @include ms-left(auto);
  }
}

//== Modifier: Small panel (anchored right, fixed width)
//
.root.rootIsSmall {
  .main {
    width: $Panel-width-xs;

    @media (min-width: $ms-screen-min-md) {
      width: $Panel-width-sm;
    }
  }
}

//== Modifier: Small panel (anchored left, fixed width)
//
.root.rootIsSmallLeft {
  .main {
    @include ms-right(auto);
    @include ms-left(0);
    width: $Panel-width-xs;
    @include ms-drop-shadow(30px, 0px, 30px, -30px, .2);
  }
}

//== Modifier: Small panel, full screen (anchored left, fluid width)
// Note: This panel should only be used for dropdown menus on small screens.
//
.root.rootIsSmallFluid {
  .main {
    width: 100%;
  }
}

//== Modifier: Medium, Large, Extra Large and Custom panels (anchored right, fluid width)
//
.root.rootIsMedium,
.root.rootIsLarge,
.root.rootIsXLarge,
.root.rootIsCustom {
  .main {
    @media (min-width: $uhf-screen-min-mobile) {
      @include ms-left($Panel-margin-md);
      width: auto;
    }
  }
}

//== Modifier: Medium panel (anchored right, fixed width)
//
.root.rootIsMedium {
  .main {
    @media (min-width: $ms-screen-min-xl) {
      @include ms-left(auto);
      width: $Panel-width-md;
    }
  }
}

//== Modifier: Large panel (anchored right, fluid width)
//
.root.rootIsLarge {
  .main {
    @media (min-width: $ms-screen-min-xxl) {
      @include ms-left($Panel-margin-lg);
    }
  }
}

//== Modifier: Large fixed panel (anchored right, fixed width)
//
.root.rootIsLarge.rootIsFixed {
  .main {
    @media (min-width: $ms-screen-min-xxl) {
      @include ms-left(auto);
      width: $Panel-width-lg;
    }
  }
}

//== Modifier: XLarge panel (anchored right, fluid width)
//
.root.rootIsXLarge {
  .main {
    @media (min-width: $ms-screen-min-xxl) {
      @include ms-left($Panel-margin-xl);
    }
  }
}

//== Modifier: Medium panel (anchored right, fixed width)
//
.root.rootIsCustom {
  .main {
    @media (min-width: $ms-screen-min-xl) {
      @include ms-left(auto);
    }
  }
}

//== State: When the panel is open.
//
.root.rootIsOpen {
  .main {
    pointer-events: auto;
  }

  .overlay {
    cursor: pointer;
    pointer-events: auto;

    @include high-contrast {
      opacity: 0;
    }
  }
}

.navigation {
  padding: 0 5px;
  height: $CommandBarHeight;
  display: flex;
  justify-content: flex-end;
}

// Scrollable content area
.contentInner {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow-y: hidden;
  display: flex;
  flex-direction: column;
  .rootHasCloseButton & {
    top: $CommandBarHeight;
  }

  -webkit-overflow-scrolling: touch;

  /* Force hw accelleration on scrollable region */
  transform: translateZ(0);
}

.header, .content, .footerInner {
  padding-left: 16px;
  padding-right: 16px;

  @media (min-width: $uhf-screen-min-mobile) {
    padding-left: 32px;
    padding-right: 32px;
  }

  @media (min-width: $ms-screen-min-xxl) {
    padding-left: 40px;
    padding-right: 40px;
  }
}

.header {
  margin: 14px 0;
  // Ensure that title doesn't shrink if screen is too small
  flex-grow: 0;
  @media (min-width: $ms-screen-min-xl) {
    margin-top: 30px;
  }
}

.content {
  margin-bottom: 0;
  padding-bottom: 20px;
  overflow-y: auto;
}

.contentGrow {
  flex-grow: 1;
}

.footer {
  // Ensure that footer doesn't shrink if screen is too small
  flex-grow: 0;
  border-top: 1px solid transparent;
  transition: border $ms-animation-duration-3 $ms-animation-ease-2;
}

.footerInner {
  padding-bottom: 20px;
  padding-top: 20px;
}
.footerIsSticky {
  background: $ms-color-white;
  border-top-color: $ms-color-neutralLight;
}

// Header text at the top of the panel.
.headerText {
  @include ms-font-xl;
  color: $ms-color-neutralPrimary;
  line-height: 32px;
  margin: 0;
}
