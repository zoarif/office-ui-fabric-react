@import '../../common/common';

$rowHeight: 42px;
$compactRowHeight: 32px;
$rowVerticalPadding: 11px;
$rowHorizontalPadding: 8px;
$compactRowVerticalPadding: 6px;
$isPaddedMargin: 24px;

$rowShimmerHorizontalBorder: $rowHorizontalPadding;
$rowShimmerLineHeight: 7px;
$rowShimmerIconPlaceholderHeight: 16px;
$rowShimmerVerticalBorder: ($rowHeight - $rowShimmerLineHeight) / 2;
$compactRowShimmerVerticalBorder: ($compactRowHeight - $rowShimmerLineHeight) / 2;



/* DetailsList Colors */
// Default
$detailsList-item-default-header-text-color: $ms-color-neutralPrimary;
$detailsList-item-default-meta-text-color: $ms-color-neutralSecondaryAlt;
$detailsList-item-default-background-color: $ms-color-white;

// Hover
$detailsList-item-hover-text-color: $ms-color-neutralPrimary;
$detailsList-item-hover-meta-text-color: $ms-color-neutralSecondary;
$detailsList-item-hover-color-background: $ms-color-neutralLighter;

// Selected
$detailsList-item-selected-text-color: $ms-color-neutralDark;
$detailsList-item-selected-meta-text-color: $ms-color-neutralPrimary;
$detailsList-item-selected-background-color: $ms-color-neutralLight;

// Selected Hover
$detailsList-item-selected-hover-text-color: $ms-color-black;
$detailsList-item-selected-hover-meta-text-color: $ms-color-neutralDark;
$detailsList-item-selected-hover-background-color: $ms-color-neutralQuaternaryAlt;

// Focus
$detailsList-item-focus-header-text-color: $ms-color-black;
$detailsList-item-focus-background-color: $ms-color-neutralQuaternaryAlt;
$detailsList-item-focus-meta-text-color: $ms-color-neutralDark;


// Compact mode rules
:global(.ms-DetailsList--Compact) {
  .root {
    min-height: $compactRowHeight;
    border: 0;
  }

  .cell {
    min-height: $compactRowHeight;
    padding: $compactRowVerticalPadding $rowHorizontalPadding;

    // Masking the running shimmer background with borders
    &.shimmer {
      padding: 0 0;
      @include border-left($rowShimmerHorizontalBorder, solid, $detailsList-item-default-background-color);
      @include border-right(($rowShimmerHorizontalBorder * 4), solid, $detailsList-item-default-background-color);
      border-top: $compactRowShimmerVerticalBorder solid $detailsList-item-default-background-color;
      border-bottom: $compactRowShimmerVerticalBorder solid $detailsList-item-default-background-color;

    }

    // Masking the running shimmer background with borders when it's an Icon placeholder
    &.shimmerIconPlaceholder {
      @include border-right($rowShimmerHorizontalBorder, solid, $detailsList-item-default-background-color);
      border-bottom: ($compactRowHeight - $rowShimmerIconPlaceholderHeight) / 2 solid $detailsList-item-default-background-color;
      border-top: ($compactRowHeight - $rowShimmerIconPlaceholderHeight) / 2 solid $detailsList-item-default-background-color;
    }
  }

  .check {
    padding: $rowHorizontalPadding;
  }
}

:global(.ms-List-cell:first-child) {
  .root {
    // Don't show border-top for first row's pseudo element
    &:before {
      display: none;
    }
  }
}

// Default state
.root {
  @include focus-border(0, $ms-color-neutralSecondary);

  border-bottom: 1px solid $ms-color-neutralLighter;
  background: $detailsList-item-default-background-color;
  color: $detailsList-item-default-meta-text-color;
  display: flex;
  min-width: 100%;
  min-height: $rowHeight;
  white-space: nowrap;
  padding: 0;
  box-sizing: border-box;

  @include ms-text-align(left);
  vertical-align: top;

  // Default State hover
  &:hover {
    background: $detailsList-item-hover-color-background;
    color: $detailsList-item-hover-meta-text-color;
  }
}

// Selected State
.rootIsSelected {
  @include focus-border(0, $ms-color-themePrimary);

  color: $detailsList-item-selected-meta-text-color;
  background: $detailsList-item-selected-background-color;
  border-bottom: 1px solid $ms-color-white;

  .cell {
    // Selected State Header cell
    &.isRowHeader {
      color: $detailsList-item-selected-text-color;

      @include high-contrast {
        color: HighlightText;
      }
    }

    @include high-contrast {
      background: Highlight;
      color: HighlightText;
      -ms-high-contrast-adjust: none;
      > a {
        color: HighlightText;
      }
    }
  }

  &:before {
    position: absolute;
    display: block;
    top: -1px;
    height: 1px;
    bottom: 0;
    left: 0;
    right: 0;
    content: '';
    border-top: 1px solid $ms-color-white;
  }

  // Selected State hover
  &:hover {
    background: $detailsList-item-selected-hover-background-color;

    // Selected State hover meta cell
    .cell {
      color: $detailsList-item-selected-hover-meta-text-color;

      @include high-contrast {
        color: HighlightText;
        > a {
          color: HighlightText;
        }
      }

      // Selected State hover Header cell
      &.isRowHeader {
        color: $detailsList-item-selected-hover-text-color;

        @include high-contrast {
          color: HighlightText;
        }
      }
    }
  }

  // Focus state
  &:focus {
    background: $detailsList-item-focus-background-color;

    // Selected State hover meta cell
    .cell {
      color: $detailsList-item-focus-meta-text-color;

      @include high-contrast {
        color: HighlightText;
        > a {
          color: HighlightText;
        }
      }

      // Row header cell
      &.isRowHeader {
        color: $detailsList-item-focus-header-text-color;

        @include high-contrast {
          color: HighlightText;
        }
      }
    }
  }
}

.rootIsContentUnselectable {
  user-select: none;
  cursor: default;
}

// Default cell state
.cell {
  @include focus-border();

  display: inline-block;
  position: relative;
  box-sizing: border-box;
  padding: $rowVerticalPadding $rowHorizontalPadding;
  min-height: $rowHeight;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  &.checkCell {
    padding: 0;
    // Ensure that the check cell covers the top border of the cell.
    // This ensures the click target does not leave a spot which would
    // cause other items to be deselected.
    padding-top: 1px;
    margin-top: -1px;
    flex-shrink: 0;
  }

  & > button {
    max-width: 100%;
  }

  // Default header cell state
  &.isRowHeader {
    color: $detailsList-item-default-header-text-color;
    font-size: $ms-font-size-m;
  }

  [data-is-focusable=true] {
    @include focus-border(0, $ms-color-neutralSecondary);
  }

  // Masking the running shimmer background with borders
  &.shimmer {
    padding: 0 0;
    @include border-left($rowShimmerHorizontalBorder, solid, $detailsList-item-default-background-color);
    @include border-right(($rowShimmerHorizontalBorder * 4), solid, $detailsList-item-default-background-color);
    border-top: $rowShimmerVerticalBorder solid $detailsList-item-default-background-color;
    border-bottom: $rowShimmerVerticalBorder solid $detailsList-item-default-background-color;

  }

  // Masking the running shimmer background with borders when it's an Icon placeholder
  &.shimmerIconPlaceholder {
    @include border-right($rowShimmerHorizontalBorder, solid, $detailsList-item-default-background-color);
    border-bottom: ($rowHeight - $rowShimmerIconPlaceholderHeight) / 2 solid $detailsList-item-default-background-color;
    border-top: ($rowHeight - $rowShimmerIconPlaceholderHeight) / 2 solid $detailsList-item-default-background-color;
  }
}


.isPadded {
  @include ms-padding-right($isPaddedMargin + $rowHorizontalPadding);

  &.checkCell {
    @include ms-padding-right(0);
  }
}

.isMultiline {
  white-space: normal;
  word-break: break-word;
  text-overflow: clip;
}

.fields {
  display: flex;
  align-items: stretch;
}

.cellMeasurer .cell {
  overflow: visible;
  white-space: nowrap;
}

.checkCover {
  position: absolute;
  top: -1px;
  left: 0;
  bottom: 0;
  right: 0;
  display: none;

  .anySelected & {
    display: block;
  }
}

// 40px to take into account the checkbox of items if present.
.shimmerLeftBorder {
  border-left: 40px solid $detailsList-item-default-background-color;
}
// 1px to take into account the border-bottom when items replace shimmer lines and in default state.
.shimmerBottomBorder {
  border-bottom: 1px solid $detailsList-item-default-background-color;
}