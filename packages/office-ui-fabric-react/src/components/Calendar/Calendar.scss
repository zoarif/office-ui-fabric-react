@import '../../common/common';
// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.
//
// Office UI Fabric
// --------------------------------------------------
// Calendar styles
$Calendar-day:40px;
$Calendar-dayPicker-margin: 10px;
.root {
  @include ms-normalize;
}

// Base wrapper for the date picker.
.picker {
  color: $ms-color-black;
  font-size: $ms-font-size-m;
  position: relative;
  @include text-align(left);
}

// The holder is the only "scrollable" top-level container element.
.holder {
  -webkit-overflow-scrolling: touch;
  @include ms-borderBox;
  display: none;
}

// When the picker opens, reveal the content.
.picker.pickerIsOpened .holder {
  @include ms-borderBox;
  display: block;
}

// When a picker opens, always open it in front of other closed pickers
.pickerIsOpened {
  position: relative;
}

// The frame and wrap work together to ensure that
// clicks within the picker donâ€™t reach the holder.
.frame {
  padding: 1px;
  position: relative;
}

.wrap {
  margin: -1px;
  padding: 9px;
  display: flex;
}

// Wrapper containing the calendar view to pick a specific date.
.dayPicker {
  display: block;
}

// The header containing the month and year.
.header {
  position: relative;
  display: inline-flex;
  height: $Calendar-day;
  line-height: 44px;
  width: 100%;
}

// The month and year labels.
.monthAndYear,
.year {
  display: inline-flex;
  flex-grow: 1;
  @include ms-font-m;
  color: $ms-color-neutralPrimary;
  margin-top: -1px;
  font-weight: $ms-font-weight-semibold;
  padding: 0 5px;
}

// The calendar table of dates.
.table {
  text-align: center;
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  font-size: inherit;
  margin-top: 10px;
  td {
    margin: 0;
    padding: 0;
    &:hover {
      outline: 1px solid transparent;
    }
  }
}

// The days on the calendar.
.day,
.weekday {
  width: $Calendar-day;
  height: $Calendar-day;
  padding: 0;
  line-height: $Calendar-day;
  @include ms-font-m-plus;
  color: $ms-color-neutralPrimary;
  box-sizing: border-box; // border-radius: 2px;
}

// Today.
.dayIsToday {
  position: relative;
  background-color: $ms-color-themeLight;
  @include high-contrast {
    border: 1px solid WindowText;
  }
}

// Disabled day.
.dayIsDisabled:before {
  border-top-color: $ms-color-neutralTertiary;
}

// Out of focus days.
.dayIsUnfocused,
.dayIsDisabled {
  color: $ms-color-neutralTertiary;
  font-weight: $ms-font-weight-regular;
}

// Hovered date picker items.
.dayIsFocused:hover,
.dayIsUnfocused:hover {
  cursor: pointer;
  background: $ms-color-neutralLight;
}

.weekHover:hover, .monthHover, .monthHover:hover {
  cursor: pointer;
  background: $ms-color-neutralLight;
}

.weekHover:active, .weekHover:active .day, .monthPress, .monthPress:hover {
  cursor: pointer;
  font-weight: $ms-font-weight-semibold;
  background: $ms-color-themeLight;

  .dayIsToday {
    background: $ms-color-themePrimary;
  }
}

.day.dayIsHighlighted.dayIsFocused {
  @include focus-border(1px, $ms-color-white);
  @include high-contrast {
    @include focus-border(1px, WindowText);
  }
}

// Highlighted and hovered/focused dates.
.dayIsHighlighted:hover,
.pickerIsFocused .dayIsHighlighted {
  cursor: pointer;
  @include high-contrast {
    border: 2px solid Highlight;
  }
}

.dayIsUnfocused:active,
.dayIsFocused:active,
.dayIsHighlighted {
  background: $ms-color-themeLight;
}

.dayIsFocused:active,
.dayIsHighlighted {
  &.day {
    color: $ms-color-black;
    font-weight: $ms-font-weight-semibold;
    background: $ms-color-themeLight;
  }
}

// Disabled and highlighted dates.
.dayIsHighlighted.dayDisabled,
.dayIsHighlighted.dayDisabled:hover {
  background: $ms-color-neutralTertiary;
}

// Highlighted date squares
.dayBackground,
.weekBackground,
.monthBackground {
  .day {
    font-weight: $ms-font-weight-semibold;
    background: $ms-color-themeLight;
  }
}

// Today.
.dayIsToday, .dayIsToday,
.pickerIsFocused .dayIsToday, .dayIsToday.day:active {
  position: relative;
  color: $ms-color-white;
  font-weight: $ms-font-weight-semibold;
  background: $ms-color-themePrimary;
}

.showWeekNumbers {
  .weekNumbers {
    border-right: 1px solid $ms-color-neutralLight;
    box-sizing: border-box;
    .day {
      color: $ms-color-neutralSecondary;
      &.weekIsHighlighted {
        color: $ms-color-black;
      }
    }
  }
  .table {
    .day,
    .weekday {
      width: 30px;
    }
  }
}

// week numbers style in right-to-left view
.showWeekNumbersRTL {
  .weekNumbers {
    border-left: 1px solid $ms-color-neutralLight;
    box-sizing: border-box;
    .day {
      color: $ms-color-neutralSecondary;
      &.weekIsHighlighted {
        color: $ms-color-black;
      }
    }
  }
  .table {
    &:not(.weekNumbers) {
      margin-right: 30px;
    }
    .day,
    .weekday {
      width: 30px;
    }
  }
}

// Month and year previous/next components.
.monthComponents,
.yearComponents,
.decadeComponents {
  display: inline-flex;
  align-self: flex-end;
}

.yearComponents {
  @include margin-right(20px);
}

.prevMonth,
.nextMonth,
.prevYear,
.nextYear,
.prevDecade,
.nextDecade {
  width: $Calendar-day;
  height: $Calendar-day;
  display: block;
  text-align: center;
  line-height: $Calendar-day;
  text-align: center;
  font-size: $ms-icon-size-m;
  color: $ms-color-neutralDark;
  position: relative;
  top: 2px;
  background-color: transparent;
  border: none;
  padding: 0;
  &:hover {
    color: $ms-color-neutralDark;
    cursor: pointer;
    outline: 1px solid transparent;
  }
}

.prevMonthIsDisabled,
.nextMonthIsDisabled,
.prevYearIsDisabled,
.nextYearIsDisabled,
.prevDecadeIsDisabled,
.nextDecadeIsDisabled {
  visibility: hidden;
}

// Without modifying the Pickadate JS, this transparent
// button is necessary to toggle the month view.
.headerToggleView:hover {
  color: $ms-color-neutralSecondary;
  cursor: pointer;
}

// Text showing the currently-selected year.
.currentYear,
.currentDecade {
  display: inline-flex;
  flex-grow: 1;
  padding: 0 5px;
  @include ms-font-m;
  color: $ms-color-neutralPrimary;
  height: $Calendar-day;
  line-height: $Calendar-day;
  @include margin-left(5px);
  font-weight: $ms-font-weight-semibold;
}

// A grid of month or year options, which pushes them over
// five pixels for horizontal centering and moves them down.
.optionGrid {
  position: relative;
  height: 210px;
  width: 280px;
  @include margin(12px, 0, 0, 0);
}

// Button to select a different month.
.monthOption,
.yearOption {
  width: 60px;
  height: 60px;
  line-height: 60px;
  cursor: pointer;
  @include float(left);
  @include margin(0, 10px, 10px, 0);
  @include ms-font-s-plus;
  color: $ms-color-neutralPrimary;
  text-align: center; // border-radius: 2px;
  border: none;
  padding: 0;
  background-color: transparent;
  &:hover {
    color: $ms-color-black;
    background-color: $ms-color-neutralLight;
    outline: 1px solid transparent;
  }
  &.isHighlighted {
    background-color: $ms-color-neutralPrimary;
    color: $ms-color-white;
  }
}

.monthOptionIsDisabled,
.yearOptionIsDisabled {
  background-color: $ms-color-neutralLighter;
  color: $ms-color-neutralTertiaryAlt;
  pointer-events: none;
}

// Button to navigate to the current date.
.goToday {
  bottom: 9px;
  color: $ms-color-themePrimary;
  cursor: pointer;
  @include ms-font-s;
  color: $ms-color-neutralPrimary;
  height: 30px;
  line-height: 30px;
  padding: 0 10px;
  background-color: transparent;
  border: none;
  position: absolute !important;
  @include ms-right(13px);
  &:hover {
    color: $ms-color-themePrimary;
    outline: 1px solid transparent;
  }
  &:active {
    color: $ms-color-themeDark;
  }
}

// Additional 30px margin needed when "Go to today" button is visible
.wrap.goTodaySpacing {
  margin-bottom: 30px;
}

// State: The picker is showing the year components.
.root.isPickingYears {
  // Hide the day picking components.
  .dayPicker,
  .monthComponents {
    display: none;
  } // Hide the month picking components.
  .monthPicker {
    display: none;
  } // Show the year picking components.
  .yearPicker {
    display: block;
  }
}

// 460px and up.
//
// On screens that can fit it, we show the month picker next to the day picker if we have it enabled.
@media (min-device-width: 460px) {
  $Calendar-day: 28px;
  $Calendar-month: 40px;
  .wrap {
    padding: 9px 8px;
  } // Update the spacing and text for the day and month pickers
  .dayPicker,
  .monthPicker {
    min-height: 214px;
  }
  .header {
    height: $Calendar-day;
    line-height: $Calendar-day;
    width: 100%;
  } // Calendar day cells are smaller.
  .day,
  .weekday {
    width: $Calendar-day;
    height: $Calendar-day;
    line-height: $Calendar-day;
    font-size: $ms-font-size-s;
  } // Reduce the size of arrows to change month/year.
  .prevMonth,
  .nextMonth,
  .prevYear,
  .nextYear,
  .prevDecade,
  .nextDecade {
    font-size: 14px;
    width: 24px;
    height: 24px;
    line-height: 24px;
  }
  .holder {
    width: 212px;
    height: auto;
  }
  .monthAndYear,
  .year {
    font-size: 17px;
    color: $ms-color-neutralPrimary;
  }
  .yearComponents {
    margin-left: 1px;
  }
  .goToday {
    padding: 0 3px;
  }
  .showWeekNumbers {
    .table {
      .day,
      .weekday {
        width: 26px;
      }
    }
  } // week numbers style in right-to-left view
  .showWeekNumbersRTL {
    .table {
      .day,
      .weekday {
        width: 26px;
      }
    }
  } // Show month picker, if enabled
  .monthPickerVisible {
    .wrap {
      padding: 10px;
    } // Swap margin for padding so that the border extends the full height.
    .dayPicker {
      margin: -$Calendar-dayPicker-margin 0;
      padding: $Calendar-dayPicker-margin 0;
    } // Contains the calendar view for picking a day.
    .dayPicker {
      @include ms-borderBox;
      @include border-right(1px, solid, $ms-color-neutralLight);
      width: 212px;
      min-height: 214px;
    } // Show the month picker.
    .monthPicker {
      display: block;
    }
    .optionGrid {
      height: 150px;
      width: 212px;
    } // This component is only used on small displays.
    .toggleMonthView {
      display: none;
    } // Position the current year and decade labels.
    .currentYear,
    .currentDecade {
      font-size: 17px;
      margin: 0;
      height: $Calendar-day;
      line-height: 26px;
      display: inline-block;
    } // Reduce the size of the month buttons.
    .monthOption,
    .yearOption {
      width: $Calendar-month;
      height: $Calendar-month;
      line-height: $Calendar-month;
      font-size: 12px;
      @include margin(0, 11px, 11px, 0);
      &:hover {
        outline: 1px solid transparent;
      }
      &:nth-child(4n+4) {
        @include margin(0, 0px, 11px, 0);
      }
    } // Position the "Go to today" button below the month picker.
    .goToday {
      @include ms-borderBox;
      font-size: 12px;
      height: $Calendar-day;
      line-height: $Calendar-day;
      padding: 0 10px;
      @include ms-right(8px);
      @include text-align(right);
      top: 199px;
    } // When date and month picker are side-by-side and "Go to today" button is visible no additional margin is needed
    .wrap.goTodaySpacing {
      margin-bottom: 0px;
    } // State: The picker is showing the year components.
    // On larger screens the calendar will remain and the years
    // will replace the months.
    .root.isPickingYears {
      // On large screens, we need to keep the day picker
      // and month components in view.
      .dayPicker,
      .monthComponents {
        display: block;
      } // Hide the month picking components.
      .monthPicker {
        display: none;
      } // Show the year picking components.
      .yearPicker {
        display: block;
      }
    }
  }
  .calendarsInline {
    .wrap {
      padding: 9px 12px;
    }
    .holder {
      width: 440px;
      height: auto;
    }
    .table {
      @include margin-right(12px);
    }
    .dayPicker {
      width: auto;
    }
    .monthPicker {
      @include margin-left(13px);
    }
    .goToday {
      @include ms-right(13px);
      padding: 0 10px;
    }
    .monthComponents,
    .yearComponents,
    .decadeComponents {
      @include margin-right(12px);
    }
  } //when month picker is only visible
  .monthPickerOnly {
    .wrap {
      padding: 10px;
    }
  }
  .monthPickerAsOverlay {
    .wrap {
      padding-top: 4px;
      padding-bottom: 4px;
    }
    .holder {
      height: 240px;
      min-height: 240px;
    }

    .holderWithButton{
      padding-top:6px;
      height: auto;
    }
  }
}

// On smaller screens the month button toggles to the picking months state.
@media (max-device-width: 459px) {
  // Stop elements from going off screen
  .holder {
    width: 300px;
  }
  .calendarsInline {
    // Month and year pickers, hidden on small screens by default.
    .monthPicker,
    .yearPicker {
      display: none;
    }
  } // position year components so they do not move when switching between calendars (overlayed calendars)
  .yearComponents {
    margin-top: 2px;
  }
}

// Custom CSS for fabric-React
.wrap span:focus,
.wrap div:focus {
  @include focus-border(1px, $ms-color-neutralSecondary);
}

.goToday {
  width: auto;
}

.nextMonth,
.prevMonth,
.nextYear,
.prevYear {
  display: inline-block;
  &:hover {
    background-color: $ms-color-neutralLight;
  }
  &:active {
    background-color: $ms-color-themeLight;
  }
}

.nextMonth,
.nextYear {
  margin-left: 3px;
  margin-right: 2px;
}

.monthIsHighlighted {
  font-weight: $ms-font-weight-semibold;
  background-color: $ms-color-themeLight;
  &.monthOption:hover {
    background-color: $ms-color-themeLight;
  }
}

.monthIsCurrentMonth {
  font-weight: $ms-font-weight-semibold;
  color: $ms-color-white;
  background-color: $ms-color-themePrimary;
  &.monthOption:hover {
    font-weight: $ms-font-weight-semibold;
    color: $ms-color-white;
    background-color: $ms-color-themePrimary;
  }
}

.monthOption:active {
  background-color: $ms-color-themeLight;
}

// Highlighted Month date styling.
// Border-radius to be updated once rolled out across fabric
.topLeftCornerDate {
  border-radius: 0;
}

.topRightCornerDate {
  border-radius: 0;
}

.bottomLeftCornerDate {
  border-radius: 0;
}

.bottomRightCornerDate {
  border-radius: 0;
}

.singleTopDate {
  border-radius: 0;
}

.singleBottomDate {
  border-radius: 0;
}